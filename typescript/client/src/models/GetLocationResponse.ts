/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Coordinate } from './Coordinate';
import {
    CoordinateFromJSON,
    CoordinateFromJSONTyped,
    CoordinateToJSON,
    CoordinateToJSONTyped,
} from './Coordinate';
import type { LocationType } from './LocationType';
import {
    LocationTypeFromJSON,
    LocationTypeFromJSONTyped,
    LocationTypeToJSON,
    LocationTypeToJSONTyped,
} from './LocationType';

/**
 * 
 * @export
 * @interface GetLocationResponse
 */
export interface GetLocationResponse {
    /**
     * 
     * @type {string}
     * @memberof GetLocationResponse
     */
    locationId: string;
    /**
     * 
     * @type {LocationType}
     * @memberof GetLocationResponse
     */
    locationType?: LocationType;
    /**
     * 
     * @type {Coordinate}
     * @memberof GetLocationResponse
     */
    coordinates?: Coordinate;
    /**
     * 
     * @type {string}
     * @memberof GetLocationResponse
     * @deprecated
     */
    readonly meterPointId?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetLocationResponse
     */
    meterPointIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof GetLocationResponse
     */
    userId?: string | null;
}



/**
 * Check if a given object implements the GetLocationResponse interface.
 */
export function instanceOfGetLocationResponse(value: object): value is GetLocationResponse {
    if (!('locationId' in value) || value['locationId'] === undefined) return false;
    return true;
}

export function GetLocationResponseFromJSON(json: any): GetLocationResponse {
    return GetLocationResponseFromJSONTyped(json, false);
}

export function GetLocationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetLocationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'locationId': json['locationId'],
        'locationType': json['locationType'] == null ? undefined : LocationTypeFromJSON(json['locationType']),
        'coordinates': json['coordinates'] == null ? undefined : CoordinateFromJSON(json['coordinates']),
        'meterPointId': json['meterPointId'] == null ? undefined : json['meterPointId'],
        'meterPointIds': json['meterPointIds'] == null ? undefined : json['meterPointIds'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function GetLocationResponseToJSON(json: any): GetLocationResponse {
    return GetLocationResponseToJSONTyped(json, false);
}

export function GetLocationResponseToJSONTyped(value?: Omit<GetLocationResponse, 'meterPointId'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'locationId': value['locationId'],
        'locationType': LocationTypeToJSON(value['locationType']),
        'coordinates': CoordinateToJSON(value['coordinates']),
        'meterPointIds': value['meterPointIds'],
        'userId': value['userId'],
    };
}

