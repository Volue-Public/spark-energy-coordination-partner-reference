/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationType } from './NotificationType';
import {
    NotificationTypeFromJSON,
    NotificationTypeFromJSONTyped,
    NotificationTypeToJSON,
    NotificationTypeToJSONTyped,
} from './NotificationType';

/**
 * 
 * @export
 * @interface PostWebhookRequest
 */
export interface PostWebhookRequest {
    /**
     * 
     * @type {string}
     * @memberof PostWebhookRequest
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PostWebhookRequest
     */
    webhookSecret?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PostWebhookRequest
     */
    webhookUrl: string;
    /**
     * 
     * @type {Array<NotificationType>}
     * @memberof PostWebhookRequest
     */
    notificationTypes?: Array<NotificationType>;
}

/**
 * Check if a given object implements the PostWebhookRequest interface.
 */
export function instanceOfPostWebhookRequest(value: object): value is PostWebhookRequest {
    if (!('webhookUrl' in value) || value['webhookUrl'] === undefined) return false;
    return true;
}

export function PostWebhookRequestFromJSON(json: any): PostWebhookRequest {
    return PostWebhookRequestFromJSONTyped(json, false);
}

export function PostWebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostWebhookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'webhookSecret': json['webhookSecret'] == null ? undefined : json['webhookSecret'],
        'webhookUrl': json['webhookUrl'],
        'notificationTypes': json['notificationTypes'] == null ? undefined : ((json['notificationTypes'] as Array<any>).map(NotificationTypeFromJSON)),
    };
}

export function PostWebhookRequestToJSON(json: any): PostWebhookRequest {
    return PostWebhookRequestToJSONTyped(json, false);
}

export function PostWebhookRequestToJSONTyped(value?: PostWebhookRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'webhookSecret': value['webhookSecret'],
        'webhookUrl': value['webhookUrl'],
        'notificationTypes': value['notificationTypes'] == null ? undefined : ((value['notificationTypes'] as Array<any>).map(NotificationTypeToJSON)),
    };
}

