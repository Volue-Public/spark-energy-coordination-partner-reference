/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceTarget } from './ResourceTarget';
import {
    ResourceTargetFromJSON,
    ResourceTargetFromJSONTyped,
    ResourceTargetToJSON,
    ResourceTargetToJSONTyped,
} from './ResourceTarget';
import type { LPCDataPoint } from './LPCDataPoint';
import {
    LPCDataPointFromJSON,
    LPCDataPointFromJSONTyped,
    LPCDataPointToJSON,
    LPCDataPointToJSONTyped,
} from './LPCDataPoint';

/**
 * 
 * @export
 * @interface LPCResourceTarget
 */
export interface LPCResourceTarget {
    /**
     * 
     * @type {ResourceTarget}
     * @memberof LPCResourceTarget
     */
    resource?: ResourceTarget;
    /**
     * 
     * @type {Array<LPCDataPoint>}
     * @memberof LPCResourceTarget
     */
    points?: Array<LPCDataPoint> | null;
}

/**
 * Check if a given object implements the LPCResourceTarget interface.
 */
export function instanceOfLPCResourceTarget(value: object): value is LPCResourceTarget {
    return true;
}

export function LPCResourceTargetFromJSON(json: any): LPCResourceTarget {
    return LPCResourceTargetFromJSONTyped(json, false);
}

export function LPCResourceTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): LPCResourceTarget {
    if (json == null) {
        return json;
    }
    return {
        
        'resource': json['resource'] == null ? undefined : ResourceTargetFromJSON(json['resource']),
        'points': json['points'] == null ? undefined : ((json['points'] as Array<any>).map(LPCDataPointFromJSON)),
    };
}

export function LPCResourceTargetToJSON(json: any): LPCResourceTarget {
    return LPCResourceTargetToJSONTyped(json, false);
}

export function LPCResourceTargetToJSONTyped(value?: LPCResourceTarget | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource': ResourceTargetToJSON(value['resource']),
        'points': value['points'] == null ? undefined : ((value['points'] as Array<any>).map(LPCDataPointToJSON)),
    };
}

