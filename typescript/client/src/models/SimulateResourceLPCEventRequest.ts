/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LPCResourceTarget } from './LPCResourceTarget';
import {
    LPCResourceTargetFromJSON,
    LPCResourceTargetFromJSONTyped,
    LPCResourceTargetToJSON,
    LPCResourceTargetToJSONTyped,
} from './LPCResourceTarget';

/**
 * 
 * @export
 * @interface SimulateResourceLPCEventRequest
 */
export interface SimulateResourceLPCEventRequest {
    /**
     * 
     * @type {Array<LPCResourceTarget>}
     * @memberof SimulateResourceLPCEventRequest
     */
    resources?: Array<LPCResourceTarget> | null;
}

/**
 * Check if a given object implements the SimulateResourceLPCEventRequest interface.
 */
export function instanceOfSimulateResourceLPCEventRequest(value: object): value is SimulateResourceLPCEventRequest {
    return true;
}

export function SimulateResourceLPCEventRequestFromJSON(json: any): SimulateResourceLPCEventRequest {
    return SimulateResourceLPCEventRequestFromJSONTyped(json, false);
}

export function SimulateResourceLPCEventRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulateResourceLPCEventRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'resources': json['resources'] == null ? undefined : ((json['resources'] as Array<any>).map(LPCResourceTargetFromJSON)),
    };
}

export function SimulateResourceLPCEventRequestToJSON(json: any): SimulateResourceLPCEventRequest {
    return SimulateResourceLPCEventRequestToJSONTyped(json, false);
}

export function SimulateResourceLPCEventRequestToJSONTyped(value?: SimulateResourceLPCEventRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resources': value['resources'] == null ? undefined : ((value['resources'] as Array<any>).map(LPCResourceTargetToJSON)),
    };
}

