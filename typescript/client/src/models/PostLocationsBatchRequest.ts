/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostLocationWithUserRequest } from './PostLocationWithUserRequest';
import {
    PostLocationWithUserRequestFromJSON,
    PostLocationWithUserRequestFromJSONTyped,
    PostLocationWithUserRequestToJSON,
    PostLocationWithUserRequestToJSONTyped,
} from './PostLocationWithUserRequest';

/**
 * 
 * @export
 * @interface PostLocationsBatchRequest
 */
export interface PostLocationsBatchRequest {
    /**
     * 
     * @type {Array<PostLocationWithUserRequest>}
     * @memberof PostLocationsBatchRequest
     */
    locations: Array<PostLocationWithUserRequest>;
}

/**
 * Check if a given object implements the PostLocationsBatchRequest interface.
 */
export function instanceOfPostLocationsBatchRequest(value: object): value is PostLocationsBatchRequest {
    if (!('locations' in value) || value['locations'] === undefined) return false;
    return true;
}

export function PostLocationsBatchRequestFromJSON(json: any): PostLocationsBatchRequest {
    return PostLocationsBatchRequestFromJSONTyped(json, false);
}

export function PostLocationsBatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostLocationsBatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'locations': ((json['locations'] as Array<any>).map(PostLocationWithUserRequestFromJSON)),
    };
}

export function PostLocationsBatchRequestToJSON(json: any): PostLocationsBatchRequest {
    return PostLocationsBatchRequestToJSONTyped(json, false);
}

export function PostLocationsBatchRequestToJSONTyped(value?: PostLocationsBatchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'locations': ((value['locations'] as Array<any>).map(PostLocationWithUserRequestToJSON)),
    };
}

