/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationType } from './NotificationType';
import {
    NotificationTypeFromJSON,
    NotificationTypeFromJSONTyped,
    NotificationTypeToJSON,
    NotificationTypeToJSONTyped,
} from './NotificationType';

/**
 * 
 * @export
 * @interface PatchWebhookRequest
 */
export interface PatchWebhookRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchWebhookRequest
     */
    webhookSecret?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchWebhookRequest
     */
    webhookUrl?: string | null;
    /**
     * 
     * @type {Array<NotificationType>}
     * @memberof PatchWebhookRequest
     */
    notificationTypes?: Array<NotificationType> | null;
    /**
     * 
     * @type {boolean}
     * @memberof PatchWebhookRequest
     */
    enabled?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PatchWebhookRequest
     */
    name?: string | null;
}

/**
 * Check if a given object implements the PatchWebhookRequest interface.
 */
export function instanceOfPatchWebhookRequest(value: object): value is PatchWebhookRequest {
    return true;
}

export function PatchWebhookRequestFromJSON(json: any): PatchWebhookRequest {
    return PatchWebhookRequestFromJSONTyped(json, false);
}

export function PatchWebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchWebhookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'webhookSecret': json['webhookSecret'] == null ? undefined : json['webhookSecret'],
        'webhookUrl': json['webhookUrl'] == null ? undefined : json['webhookUrl'],
        'notificationTypes': json['notificationTypes'] == null ? undefined : ((json['notificationTypes'] as Array<any>).map(NotificationTypeFromJSON)),
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function PatchWebhookRequestToJSON(json: any): PatchWebhookRequest {
    return PatchWebhookRequestToJSONTyped(json, false);
}

export function PatchWebhookRequestToJSONTyped(value?: PatchWebhookRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'webhookSecret': value['webhookSecret'],
        'webhookUrl': value['webhookUrl'],
        'notificationTypes': value['notificationTypes'] == null ? undefined : ((value['notificationTypes'] as Array<any>).map(NotificationTypeToJSON)),
        'enabled': value['enabled'],
        'name': value['name'],
    };
}

