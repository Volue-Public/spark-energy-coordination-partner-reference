/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SparkEventPayload } from './SparkEventPayload';
import {
    SparkEventPayloadFromJSON,
    SparkEventPayloadFromJSONTyped,
    SparkEventPayloadToJSON,
    SparkEventPayloadToJSONTyped,
} from './SparkEventPayload';
import type { SparkEventPayloadType } from './SparkEventPayloadType';
import {
    SparkEventPayloadTypeFromJSON,
    SparkEventPayloadTypeFromJSONTyped,
    SparkEventPayloadTypeToJSON,
    SparkEventPayloadTypeToJSONTyped,
} from './SparkEventPayloadType';

/**
 * 
 * @export
 * @interface UserEligibilityPayload
 */
export interface UserEligibilityPayload extends SparkEventPayload {
    /**
     * 
     * @type {Date}
     * @memberof UserEligibilityPayload
     */
    lastUpdated: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserEligibilityPayload
     */
    addedUsers: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserEligibilityPayload
     */
    removedUsers: Array<string>;
}



/**
 * Check if a given object implements the UserEligibilityPayload interface.
 */
export function instanceOfUserEligibilityPayload(value: object): value is UserEligibilityPayload {
    if (!('lastUpdated' in value) || value['lastUpdated'] === undefined) return false;
    if (!('addedUsers' in value) || value['addedUsers'] === undefined) return false;
    if (!('removedUsers' in value) || value['removedUsers'] === undefined) return false;
    return true;
}

export function UserEligibilityPayloadFromJSON(json: any): UserEligibilityPayload {
    return UserEligibilityPayloadFromJSONTyped(json, false);
}

export function UserEligibilityPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserEligibilityPayload {
    if (json == null) {
        return json;
    }
    return {
        ...SparkEventPayloadFromJSONTyped(json, true),
        'lastUpdated': (new Date(json['lastUpdated'])),
        'addedUsers': json['addedUsers'],
        'removedUsers': json['removedUsers'],
    };
}

export function UserEligibilityPayloadToJSON(json: any): UserEligibilityPayload {
    return UserEligibilityPayloadToJSONTyped(json, false);
}

export function UserEligibilityPayloadToJSONTyped(value?: UserEligibilityPayload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...SparkEventPayloadToJSONTyped(value, true),
        'lastUpdated': ((value['lastUpdated']).toISOString()),
        'addedUsers': value['addedUsers'],
        'removedUsers': value['removedUsers'],
    };
}

