/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LPCLocationTarget } from './LPCLocationTarget';
import {
    LPCLocationTargetFromJSON,
    LPCLocationTargetFromJSONTyped,
    LPCLocationTargetToJSON,
    LPCLocationTargetToJSONTyped,
} from './LPCLocationTarget';

/**
 * 
 * @export
 * @interface SimulateLocationLPCEventRequest
 */
export interface SimulateLocationLPCEventRequest {
    /**
     * 
     * @type {Array<LPCLocationTarget>}
     * @memberof SimulateLocationLPCEventRequest
     */
    locations?: Array<LPCLocationTarget> | null;
}

/**
 * Check if a given object implements the SimulateLocationLPCEventRequest interface.
 */
export function instanceOfSimulateLocationLPCEventRequest(value: object): value is SimulateLocationLPCEventRequest {
    return true;
}

export function SimulateLocationLPCEventRequestFromJSON(json: any): SimulateLocationLPCEventRequest {
    return SimulateLocationLPCEventRequestFromJSONTyped(json, false);
}

export function SimulateLocationLPCEventRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulateLocationLPCEventRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'locations': json['locations'] == null ? undefined : ((json['locations'] as Array<any>).map(LPCLocationTargetFromJSON)),
    };
}

export function SimulateLocationLPCEventRequestToJSON(json: any): SimulateLocationLPCEventRequest {
    return SimulateLocationLPCEventRequestToJSONTyped(json, false);
}

export function SimulateLocationLPCEventRequestToJSONTyped(value?: SimulateLocationLPCEventRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'locations': value['locations'] == null ? undefined : ((value['locations'] as Array<any>).map(LPCLocationTargetToJSON)),
    };
}

