/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookStatus } from './WebhookStatus';
import {
    WebhookStatusFromJSON,
    WebhookStatusFromJSONTyped,
    WebhookStatusToJSON,
    WebhookStatusToJSONTyped,
} from './WebhookStatus';
import type { NotificationType } from './NotificationType';
import {
    NotificationTypeFromJSON,
    NotificationTypeFromJSONTyped,
    NotificationTypeToJSON,
    NotificationTypeToJSONTyped,
} from './NotificationType';

/**
 * 
 * @export
 * @interface GetWebhookResponse
 */
export interface GetWebhookResponse {
    /**
     * 
     * @type {string}
     * @memberof GetWebhookResponse
     */
    webhookId: string;
    /**
     * 
     * @type {string}
     * @memberof GetWebhookResponse
     */
    webhookUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GetWebhookResponse
     */
    name?: string | null;
    /**
     * 
     * @type {Array<NotificationType>}
     * @memberof GetWebhookResponse
     */
    notificationTypes?: Array<NotificationType>;
    /**
     * 
     * @type {boolean}
     * @memberof GetWebhookResponse
     */
    enabled?: boolean;
    /**
     * 
     * @type {WebhookStatus}
     * @memberof GetWebhookResponse
     */
    status?: WebhookStatus;
    /**
     * 
     * @type {Date}
     * @memberof GetWebhookResponse
     */
    modifiedDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetWebhookResponse
     */
    createdDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetWebhookResponse
     */
    lastAnalyzedTimestamp?: Date;
}



/**
 * Check if a given object implements the GetWebhookResponse interface.
 */
export function instanceOfGetWebhookResponse(value: object): value is GetWebhookResponse {
    if (!('webhookId' in value) || value['webhookId'] === undefined) return false;
    if (!('webhookUrl' in value) || value['webhookUrl'] === undefined) return false;
    return true;
}

export function GetWebhookResponseFromJSON(json: any): GetWebhookResponse {
    return GetWebhookResponseFromJSONTyped(json, false);
}

export function GetWebhookResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetWebhookResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'webhookId': json['webhookId'],
        'webhookUrl': json['webhookUrl'],
        'name': json['name'] == null ? undefined : json['name'],
        'notificationTypes': json['notificationTypes'] == null ? undefined : ((json['notificationTypes'] as Array<any>).map(NotificationTypeFromJSON)),
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'status': json['status'] == null ? undefined : WebhookStatusFromJSON(json['status']),
        'modifiedDate': json['modifiedDate'] == null ? undefined : (new Date(json['modifiedDate'])),
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'lastAnalyzedTimestamp': json['lastAnalyzedTimestamp'] == null ? undefined : (new Date(json['lastAnalyzedTimestamp'])),
    };
}

export function GetWebhookResponseToJSON(json: any): GetWebhookResponse {
    return GetWebhookResponseToJSONTyped(json, false);
}

export function GetWebhookResponseToJSONTyped(value?: GetWebhookResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'webhookId': value['webhookId'],
        'webhookUrl': value['webhookUrl'],
        'name': value['name'],
        'notificationTypes': value['notificationTypes'] == null ? undefined : ((value['notificationTypes'] as Array<any>).map(NotificationTypeToJSON)),
        'enabled': value['enabled'],
        'status': WebhookStatusToJSON(value['status']),
        'modifiedDate': value['modifiedDate'] == null ? undefined : ((value['modifiedDate']).toISOString()),
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
        'lastAnalyzedTimestamp': value['lastAnalyzedTimestamp'] == null ? undefined : ((value['lastAnalyzedTimestamp']).toISOString()),
    };
}

