/* tslint:disable */
/* eslint-disable */
/**
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetReportResponse,
  PostReportRequest,
} from '../models/index';
import {
    GetReportResponseFromJSON,
    GetReportResponseToJSON,
    PostReportRequestFromJSON,
    PostReportRequestToJSON,
} from '../models/index';

export interface PostReportOperationRequest {
    postReportRequest: PostReportRequest;
}

/**
 * 
 */
export class ReportsApi extends runtime.BaseAPI {

    /**
     * Create a report
     */
    async postReportRaw(requestParameters: PostReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetReportResponse>> {
        if (requestParameters['postReportRequest'] == null) {
            throw new runtime.RequiredError(
                'postReportRequest',
                'Required parameter "postReportRequest" was null or undefined when calling postReport().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/reports`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostReportRequestToJSON(requestParameters['postReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetReportResponseFromJSON(jsonValue));
    }

    /**
     * Create a report
     */
    async postReport(requestParameters: PostReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetReportResponse> {
        const response = await this.postReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
