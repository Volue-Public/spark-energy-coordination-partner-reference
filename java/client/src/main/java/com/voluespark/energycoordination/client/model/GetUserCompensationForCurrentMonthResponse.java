/*
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.voluespark.energycoordination.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** GetUserCompensationForCurrentMonthResponse */
@JsonPropertyOrder({
  GetUserCompensationForCurrentMonthResponse.JSON_PROPERTY_USER_ID,
  GetUserCompensationForCurrentMonthResponse.JSON_PROPERTY_PERIOD,
  GetUserCompensationForCurrentMonthResponse.JSON_PROPERTY_LOCATION_COMPENSATIONS
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.12.0")
public class GetUserCompensationForCurrentMonthResponse {
  public static final String JSON_PROPERTY_USER_ID = "userId";
  @jakarta.annotation.Nullable private String userId;

  public static final String JSON_PROPERTY_PERIOD = "period";
  @jakarta.annotation.Nonnull private Period period;

  public static final String JSON_PROPERTY_LOCATION_COMPENSATIONS = "locationCompensations";

  @jakarta.annotation.Nullable
  private List<LocationCompensation> locationCompensations = new ArrayList<>();

  public GetUserCompensationForCurrentMonthResponse() {}

  public GetUserCompensationForCurrentMonthResponse userId(
      @jakarta.annotation.Nullable String userId) {

    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   *
   * @return userId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUserId() {
    return userId;
  }

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@jakarta.annotation.Nullable String userId) {
    this.userId = userId;
  }

  public GetUserCompensationForCurrentMonthResponse period(
      @jakarta.annotation.Nonnull Period period) {

    this.period = period;
    return this;
  }

  /**
   * Get period
   *
   * @return period
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Period getPeriod() {
    return period;
  }

  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPeriod(@jakarta.annotation.Nonnull Period period) {
    this.period = period;
  }

  public GetUserCompensationForCurrentMonthResponse locationCompensations(
      @jakarta.annotation.Nullable List<LocationCompensation> locationCompensations) {

    this.locationCompensations = locationCompensations;
    return this;
  }

  public GetUserCompensationForCurrentMonthResponse addLocationCompensationsItem(
      LocationCompensation locationCompensationsItem) {
    if (this.locationCompensations == null) {
      this.locationCompensations = new ArrayList<>();
    }
    this.locationCompensations.add(locationCompensationsItem);
    return this;
  }

  /**
   * Get locationCompensations
   *
   * @return locationCompensations
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION_COMPENSATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<LocationCompensation> getLocationCompensations() {
    return locationCompensations;
  }

  @JsonProperty(JSON_PROPERTY_LOCATION_COMPENSATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationCompensations(
      @jakarta.annotation.Nullable List<LocationCompensation> locationCompensations) {
    this.locationCompensations = locationCompensations;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUserCompensationForCurrentMonthResponse getUserCompensationForCurrentMonthResponse =
        (GetUserCompensationForCurrentMonthResponse) o;
    return Objects.equals(this.userId, getUserCompensationForCurrentMonthResponse.userId)
        && Objects.equals(this.period, getUserCompensationForCurrentMonthResponse.period)
        && Objects.equals(
            this.locationCompensations,
            getUserCompensationForCurrentMonthResponse.locationCompensations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, period, locationCompensations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUserCompensationForCurrentMonthResponse {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    locationCompensations: ")
        .append(toIndentedString(locationCompensations))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
