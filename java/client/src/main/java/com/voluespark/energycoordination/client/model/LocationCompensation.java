/*
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.voluespark.energycoordination.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** LocationCompensation */
@JsonPropertyOrder({
  LocationCompensation.JSON_PROPERTY_LOCATION_ID,
  LocationCompensation.JSON_PROPERTY_METER_POINT_IDS,
  LocationCompensation.JSON_PROPERTY_ACTIVE_AMOUNT,
  LocationCompensation.JSON_PROPERTY_BLOCKED_AMOUNT,
  LocationCompensation.JSON_PROPERTY_CURRENCY,
  LocationCompensation.JSON_PROPERTY_PROBLEMS
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.12.0")
public class LocationCompensation {
  public static final String JSON_PROPERTY_LOCATION_ID = "locationId";
  @jakarta.annotation.Nullable private String locationId;

  public static final String JSON_PROPERTY_METER_POINT_IDS = "meterPointIds";
  @jakarta.annotation.Nullable private List<String> meterPointIds = new ArrayList<>();

  public static final String JSON_PROPERTY_ACTIVE_AMOUNT = "activeAmount";
  @jakarta.annotation.Nullable private Double activeAmount;

  public static final String JSON_PROPERTY_BLOCKED_AMOUNT = "blockedAmount";
  @jakarta.annotation.Nullable private Double blockedAmount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @jakarta.annotation.Nullable private Currency currency;

  public static final String JSON_PROPERTY_PROBLEMS = "problems";
  @jakarta.annotation.Nullable private List<Problem> problems = new ArrayList<>();

  public LocationCompensation() {}

  public LocationCompensation locationId(@jakarta.annotation.Nullable String locationId) {

    this.locationId = locationId;
    return this;
  }

  /**
   * Get locationId
   *
   * @return locationId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLocationId() {
    return locationId;
  }

  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationId(@jakarta.annotation.Nullable String locationId) {
    this.locationId = locationId;
  }

  public LocationCompensation meterPointIds(
      @jakarta.annotation.Nullable List<String> meterPointIds) {

    this.meterPointIds = meterPointIds;
    return this;
  }

  public LocationCompensation addMeterPointIdsItem(String meterPointIdsItem) {
    if (this.meterPointIds == null) {
      this.meterPointIds = new ArrayList<>();
    }
    this.meterPointIds.add(meterPointIdsItem);
    return this;
  }

  /**
   * Get meterPointIds
   *
   * @return meterPointIds
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METER_POINT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getMeterPointIds() {
    return meterPointIds;
  }

  @JsonProperty(JSON_PROPERTY_METER_POINT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeterPointIds(@jakarta.annotation.Nullable List<String> meterPointIds) {
    this.meterPointIds = meterPointIds;
  }

  public LocationCompensation activeAmount(@jakarta.annotation.Nullable Double activeAmount) {

    this.activeAmount = activeAmount;
    return this;
  }

  /**
   * Get activeAmount
   *
   * @return activeAmount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getActiveAmount() {
    return activeAmount;
  }

  @JsonProperty(JSON_PROPERTY_ACTIVE_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveAmount(@jakarta.annotation.Nullable Double activeAmount) {
    this.activeAmount = activeAmount;
  }

  public LocationCompensation blockedAmount(@jakarta.annotation.Nullable Double blockedAmount) {

    this.blockedAmount = blockedAmount;
    return this;
  }

  /**
   * Get blockedAmount
   *
   * @return blockedAmount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BLOCKED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getBlockedAmount() {
    return blockedAmount;
  }

  @JsonProperty(JSON_PROPERTY_BLOCKED_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlockedAmount(@jakarta.annotation.Nullable Double blockedAmount) {
    this.blockedAmount = blockedAmount;
  }

  public LocationCompensation currency(@jakarta.annotation.Nullable Currency currency) {

    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   *
   * @return currency
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Currency getCurrency() {
    return currency;
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(@jakarta.annotation.Nullable Currency currency) {
    this.currency = currency;
  }

  public LocationCompensation problems(@jakarta.annotation.Nullable List<Problem> problems) {

    this.problems = problems;
    return this;
  }

  public LocationCompensation addProblemsItem(Problem problemsItem) {
    if (this.problems == null) {
      this.problems = new ArrayList<>();
    }
    this.problems.add(problemsItem);
    return this;
  }

  /**
   * Get problems
   *
   * @return problems
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROBLEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Problem> getProblems() {
    return problems;
  }

  @JsonProperty(JSON_PROPERTY_PROBLEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProblems(@jakarta.annotation.Nullable List<Problem> problems) {
    this.problems = problems;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationCompensation locationCompensation = (LocationCompensation) o;
    return Objects.equals(this.locationId, locationCompensation.locationId)
        && Objects.equals(this.meterPointIds, locationCompensation.meterPointIds)
        && Objects.equals(this.activeAmount, locationCompensation.activeAmount)
        && Objects.equals(this.blockedAmount, locationCompensation.blockedAmount)
        && Objects.equals(this.currency, locationCompensation.currency)
        && Objects.equals(this.problems, locationCompensation.problems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationId, meterPointIds, activeAmount, blockedAmount, currency, problems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationCompensation {\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    meterPointIds: ").append(toIndentedString(meterPointIds)).append("\n");
    sb.append("    activeAmount: ").append(toIndentedString(activeAmount)).append("\n");
    sb.append("    blockedAmount: ").append(toIndentedString(blockedAmount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    problems: ").append(toIndentedString(problems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
