/*
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.voluespark.energycoordination.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Objects;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

/** GetUserEnrollmentResponse */
@JsonPropertyOrder({
  GetUserEnrollmentResponse.JSON_PROPERTY_IS_ENROLLED,
  GetUserEnrollmentResponse.JSON_PROPERTY_USER_ID,
  GetUserEnrollmentResponse.JSON_PROPERTY_ENROLLMENT_ID,
  GetUserEnrollmentResponse.JSON_PROPERTY_ENROLLMENT_DATE
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.12.0")
public class GetUserEnrollmentResponse {
  public static final String JSON_PROPERTY_IS_ENROLLED = "isEnrolled";
  @jakarta.annotation.Nullable private Boolean isEnrolled;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @jakarta.annotation.Nonnull private String userId;

  public static final String JSON_PROPERTY_ENROLLMENT_ID = "enrollmentId";

  @jakarta.annotation.Nullable
  private JsonNullable<UUID> enrollmentId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ENROLLMENT_DATE = "enrollmentDate";

  @jakarta.annotation.Nullable
  private JsonNullable<OffsetDateTime> enrollmentDate = JsonNullable.<OffsetDateTime>undefined();

  public GetUserEnrollmentResponse() {}

  /** Constructor with only readonly parameters */
  @JsonCreator
  public GetUserEnrollmentResponse(@JsonProperty(JSON_PROPERTY_IS_ENROLLED) Boolean isEnrolled) {
    this();
    this.isEnrolled = isEnrolled;
  }

  /**
   * Get isEnrolled
   *
   * @return isEnrolled
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ENROLLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsEnrolled() {
    return isEnrolled;
  }

  public GetUserEnrollmentResponse userId(@jakarta.annotation.Nonnull String userId) {

    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   *
   * @return userId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getUserId() {
    return userId;
  }

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(@jakarta.annotation.Nonnull String userId) {
    this.userId = userId;
  }

  public GetUserEnrollmentResponse enrollmentId(@jakarta.annotation.Nullable UUID enrollmentId) {
    this.enrollmentId = JsonNullable.<UUID>of(enrollmentId);

    return this;
  }

  /**
   * Get enrollmentId
   *
   * @return enrollmentId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public UUID getEnrollmentId() {
    return enrollmentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENROLLMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<UUID> getEnrollmentId_JsonNullable() {
    return enrollmentId;
  }

  @JsonProperty(JSON_PROPERTY_ENROLLMENT_ID)
  public void setEnrollmentId_JsonNullable(JsonNullable<UUID> enrollmentId) {
    this.enrollmentId = enrollmentId;
  }

  public void setEnrollmentId(@jakarta.annotation.Nullable UUID enrollmentId) {
    this.enrollmentId = JsonNullable.<UUID>of(enrollmentId);
  }

  public GetUserEnrollmentResponse enrollmentDate(
      @jakarta.annotation.Nullable OffsetDateTime enrollmentDate) {
    this.enrollmentDate = JsonNullable.<OffsetDateTime>of(enrollmentDate);

    return this;
  }

  /**
   * Get enrollmentDate
   *
   * @return enrollmentDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getEnrollmentDate() {
    return enrollmentDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENROLLMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<OffsetDateTime> getEnrollmentDate_JsonNullable() {
    return enrollmentDate;
  }

  @JsonProperty(JSON_PROPERTY_ENROLLMENT_DATE)
  public void setEnrollmentDate_JsonNullable(JsonNullable<OffsetDateTime> enrollmentDate) {
    this.enrollmentDate = enrollmentDate;
  }

  public void setEnrollmentDate(@jakarta.annotation.Nullable OffsetDateTime enrollmentDate) {
    this.enrollmentDate = JsonNullable.<OffsetDateTime>of(enrollmentDate);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUserEnrollmentResponse getUserEnrollmentResponse = (GetUserEnrollmentResponse) o;
    return Objects.equals(this.isEnrolled, getUserEnrollmentResponse.isEnrolled)
        && Objects.equals(this.userId, getUserEnrollmentResponse.userId)
        && equalsNullable(this.enrollmentId, getUserEnrollmentResponse.enrollmentId)
        && equalsNullable(this.enrollmentDate, getUserEnrollmentResponse.enrollmentDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b
        || (a != null
            && b != null
            && a.isPresent()
            && b.isPresent()
            && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        isEnrolled, userId, hashCodeNullable(enrollmentId), hashCodeNullable(enrollmentDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUserEnrollmentResponse {\n");
    sb.append("    isEnrolled: ").append(toIndentedString(isEnrolled)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    enrollmentId: ").append(toIndentedString(enrollmentId)).append("\n");
    sb.append("    enrollmentDate: ").append(toIndentedString(enrollmentDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
