/*
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.voluespark.energycoordination.client.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/** WebhookNotificationLog */
@JsonPropertyOrder({
  WebhookNotificationLog.JSON_PROPERTY_WEBHOOK_ID,
  WebhookNotificationLog.JSON_PROPERTY_TENANT_ID,
  WebhookNotificationLog.JSON_PROPERTY_PARTNER_EVENT_ID,
  WebhookNotificationLog.JSON_PROPERTY_NOTIFICATION_ID,
  WebhookNotificationLog.JSON_PROPERTY_NOTIFICATION_TYPE,
  WebhookNotificationLog.JSON_PROPERTY_NOTIFICATION_SENT,
  WebhookNotificationLog.JSON_PROPERTY_SPARK_SIGNATURE,
  WebhookNotificationLog.JSON_PROPERTY_WEBHOOK_URL,
  WebhookNotificationLog.JSON_PROPERTY_REQUEST_TIMEOUT,
  WebhookNotificationLog.JSON_PROPERTY_RESPONSE_STATUS_CODE,
  WebhookNotificationLog.JSON_PROPERTY_REQUEST_DURATION_MS
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.12.0")
public class WebhookNotificationLog {
  public static final String JSON_PROPERTY_WEBHOOK_ID = "webhookId";
  @jakarta.annotation.Nonnull private String webhookId;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  @jakarta.annotation.Nonnull private String tenantId;

  public static final String JSON_PROPERTY_PARTNER_EVENT_ID = "partnerEventId";
  @jakarta.annotation.Nullable private String partnerEventId;

  public static final String JSON_PROPERTY_NOTIFICATION_ID = "notificationId";
  @jakarta.annotation.Nullable private String notificationId;

  public static final String JSON_PROPERTY_NOTIFICATION_TYPE = "notificationType";
  @jakarta.annotation.Nullable private NotificationType notificationType;

  public static final String JSON_PROPERTY_NOTIFICATION_SENT = "notificationSent";
  @jakarta.annotation.Nullable private OffsetDateTime notificationSent;

  public static final String JSON_PROPERTY_SPARK_SIGNATURE = "sparkSignature";

  @jakarta.annotation.Nullable
  private JsonNullable<String> sparkSignature = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEBHOOK_URL = "webhookUrl";
  @jakarta.annotation.Nonnull private URI webhookUrl;

  public static final String JSON_PROPERTY_REQUEST_TIMEOUT = "requestTimeout";
  @jakarta.annotation.Nullable private Boolean requestTimeout;

  public static final String JSON_PROPERTY_RESPONSE_STATUS_CODE = "responseStatusCode";

  @jakarta.annotation.Nullable
  private JsonNullable<Integer> responseStatusCode = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_REQUEST_DURATION_MS = "requestDurationMs";

  @jakarta.annotation.Nullable
  private JsonNullable<Long> requestDurationMs = JsonNullable.<Long>undefined();

  public WebhookNotificationLog() {}

  public WebhookNotificationLog webhookId(@jakarta.annotation.Nonnull String webhookId) {

    this.webhookId = webhookId;
    return this;
  }

  /**
   * Get webhookId
   *
   * @return webhookId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEBHOOK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getWebhookId() {
    return webhookId;
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebhookId(@jakarta.annotation.Nonnull String webhookId) {
    this.webhookId = webhookId;
  }

  public WebhookNotificationLog tenantId(@jakarta.annotation.Nonnull String tenantId) {

    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   *
   * @return tenantId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getTenantId() {
    return tenantId;
  }

  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTenantId(@jakarta.annotation.Nonnull String tenantId) {
    this.tenantId = tenantId;
  }

  public WebhookNotificationLog partnerEventId(@jakarta.annotation.Nullable String partnerEventId) {

    this.partnerEventId = partnerEventId;
    return this;
  }

  /**
   * Get partnerEventId
   *
   * @return partnerEventId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTNER_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPartnerEventId() {
    return partnerEventId;
  }

  @JsonProperty(JSON_PROPERTY_PARTNER_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartnerEventId(@jakarta.annotation.Nullable String partnerEventId) {
    this.partnerEventId = partnerEventId;
  }

  public WebhookNotificationLog notificationId(@jakarta.annotation.Nullable String notificationId) {

    this.notificationId = notificationId;
    return this;
  }

  /**
   * Get notificationId
   *
   * @return notificationId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNotificationId() {
    return notificationId;
  }

  @JsonProperty(JSON_PROPERTY_NOTIFICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotificationId(@jakarta.annotation.Nullable String notificationId) {
    this.notificationId = notificationId;
  }

  public WebhookNotificationLog notificationType(
      @jakarta.annotation.Nullable NotificationType notificationType) {

    this.notificationType = notificationType;
    return this;
  }

  /**
   * Get notificationType
   *
   * @return notificationType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public NotificationType getNotificationType() {
    return notificationType;
  }

  @JsonProperty(JSON_PROPERTY_NOTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotificationType(@jakarta.annotation.Nullable NotificationType notificationType) {
    this.notificationType = notificationType;
  }

  public WebhookNotificationLog notificationSent(
      @jakarta.annotation.Nullable OffsetDateTime notificationSent) {

    this.notificationSent = notificationSent;
    return this;
  }

  /**
   * Get notificationSent
   *
   * @return notificationSent
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getNotificationSent() {
    return notificationSent;
  }

  @JsonProperty(JSON_PROPERTY_NOTIFICATION_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotificationSent(@jakarta.annotation.Nullable OffsetDateTime notificationSent) {
    this.notificationSent = notificationSent;
  }

  public WebhookNotificationLog sparkSignature(@jakarta.annotation.Nullable String sparkSignature) {
    this.sparkSignature = JsonNullable.<String>of(sparkSignature);

    return this;
  }

  /**
   * Get sparkSignature
   *
   * @return sparkSignature
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getSparkSignature() {
    return sparkSignature.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPARK_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getSparkSignature_JsonNullable() {
    return sparkSignature;
  }

  @JsonProperty(JSON_PROPERTY_SPARK_SIGNATURE)
  public void setSparkSignature_JsonNullable(JsonNullable<String> sparkSignature) {
    this.sparkSignature = sparkSignature;
  }

  public void setSparkSignature(@jakarta.annotation.Nullable String sparkSignature) {
    this.sparkSignature = JsonNullable.<String>of(sparkSignature);
  }

  public WebhookNotificationLog webhookUrl(@jakarta.annotation.Nonnull URI webhookUrl) {

    this.webhookUrl = webhookUrl;
    return this;
  }

  /**
   * Get webhookUrl
   *
   * @return webhookUrl
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public URI getWebhookUrl() {
    return webhookUrl;
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebhookUrl(@jakarta.annotation.Nonnull URI webhookUrl) {
    this.webhookUrl = webhookUrl;
  }

  public WebhookNotificationLog requestTimeout(
      @jakarta.annotation.Nullable Boolean requestTimeout) {

    this.requestTimeout = requestTimeout;
    return this;
  }

  /**
   * Get requestTimeout
   *
   * @return requestTimeout
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRequestTimeout() {
    return requestTimeout;
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestTimeout(@jakarta.annotation.Nullable Boolean requestTimeout) {
    this.requestTimeout = requestTimeout;
  }

  public WebhookNotificationLog responseStatusCode(
      @jakarta.annotation.Nullable Integer responseStatusCode) {
    this.responseStatusCode = JsonNullable.<Integer>of(responseStatusCode);

    return this;
  }

  /**
   * Get responseStatusCode
   *
   * @return responseStatusCode
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public Integer getResponseStatusCode() {
    return responseStatusCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESPONSE_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<Integer> getResponseStatusCode_JsonNullable() {
    return responseStatusCode;
  }

  @JsonProperty(JSON_PROPERTY_RESPONSE_STATUS_CODE)
  public void setResponseStatusCode_JsonNullable(JsonNullable<Integer> responseStatusCode) {
    this.responseStatusCode = responseStatusCode;
  }

  public void setResponseStatusCode(@jakarta.annotation.Nullable Integer responseStatusCode) {
    this.responseStatusCode = JsonNullable.<Integer>of(responseStatusCode);
  }

  public WebhookNotificationLog requestDurationMs(
      @jakarta.annotation.Nullable Long requestDurationMs) {
    this.requestDurationMs = JsonNullable.<Long>of(requestDurationMs);

    return this;
  }

  /**
   * Get requestDurationMs
   *
   * @return requestDurationMs
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public Long getRequestDurationMs() {
    return requestDurationMs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_DURATION_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<Long> getRequestDurationMs_JsonNullable() {
    return requestDurationMs;
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_DURATION_MS)
  public void setRequestDurationMs_JsonNullable(JsonNullable<Long> requestDurationMs) {
    this.requestDurationMs = requestDurationMs;
  }

  public void setRequestDurationMs(@jakarta.annotation.Nullable Long requestDurationMs) {
    this.requestDurationMs = JsonNullable.<Long>of(requestDurationMs);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookNotificationLog webhookNotificationLog = (WebhookNotificationLog) o;
    return Objects.equals(this.webhookId, webhookNotificationLog.webhookId)
        && Objects.equals(this.tenantId, webhookNotificationLog.tenantId)
        && Objects.equals(this.partnerEventId, webhookNotificationLog.partnerEventId)
        && Objects.equals(this.notificationId, webhookNotificationLog.notificationId)
        && Objects.equals(this.notificationType, webhookNotificationLog.notificationType)
        && Objects.equals(this.notificationSent, webhookNotificationLog.notificationSent)
        && equalsNullable(this.sparkSignature, webhookNotificationLog.sparkSignature)
        && Objects.equals(this.webhookUrl, webhookNotificationLog.webhookUrl)
        && Objects.equals(this.requestTimeout, webhookNotificationLog.requestTimeout)
        && equalsNullable(this.responseStatusCode, webhookNotificationLog.responseStatusCode)
        && equalsNullable(this.requestDurationMs, webhookNotificationLog.requestDurationMs);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b
        || (a != null
            && b != null
            && a.isPresent()
            && b.isPresent()
            && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        webhookId,
        tenantId,
        partnerEventId,
        notificationId,
        notificationType,
        notificationSent,
        hashCodeNullable(sparkSignature),
        webhookUrl,
        requestTimeout,
        hashCodeNullable(responseStatusCode),
        hashCodeNullable(requestDurationMs));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookNotificationLog {\n");
    sb.append("    webhookId: ").append(toIndentedString(webhookId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    partnerEventId: ").append(toIndentedString(partnerEventId)).append("\n");
    sb.append("    notificationId: ").append(toIndentedString(notificationId)).append("\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    notificationSent: ").append(toIndentedString(notificationSent)).append("\n");
    sb.append("    sparkSignature: ").append(toIndentedString(sparkSignature)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    requestTimeout: ").append(toIndentedString(requestTimeout)).append("\n");
    sb.append("    responseStatusCode: ").append(toIndentedString(responseStatusCode)).append("\n");
    sb.append("    requestDurationMs: ").append(toIndentedString(requestDurationMs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
