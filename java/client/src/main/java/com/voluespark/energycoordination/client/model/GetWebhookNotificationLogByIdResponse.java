/*
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.voluespark.energycoordination.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** GetWebhookNotificationLogByIdResponse */
@JsonPropertyOrder({
  GetWebhookNotificationLogByIdResponse.JSON_PROPERTY_WEBHOOK_NOTIFICATION_LOG,
  GetWebhookNotificationLogByIdResponse.JSON_PROPERTY_NOTIFICATION_CONTENT
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.9.0-SNAPSHOT")
public class GetWebhookNotificationLogByIdResponse {
  public static final String JSON_PROPERTY_WEBHOOK_NOTIFICATION_LOG = "webhookNotificationLog";
  private WebhookNotificationLog webhookNotificationLog;

  public static final String JSON_PROPERTY_NOTIFICATION_CONTENT = "notificationContent";
  private String notificationContent;

  public GetWebhookNotificationLogByIdResponse() {}

  public GetWebhookNotificationLogByIdResponse webhookNotificationLog(
      WebhookNotificationLog webhookNotificationLog) {

    this.webhookNotificationLog = webhookNotificationLog;
    return this;
  }

  /**
   * Get webhookNotificationLog
   *
   * @return webhookNotificationLog
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK_NOTIFICATION_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public WebhookNotificationLog getWebhookNotificationLog() {
    return webhookNotificationLog;
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_NOTIFICATION_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookNotificationLog(WebhookNotificationLog webhookNotificationLog) {
    this.webhookNotificationLog = webhookNotificationLog;
  }

  public GetWebhookNotificationLogByIdResponse notificationContent(String notificationContent) {

    this.notificationContent = notificationContent;
    return this;
  }

  /**
   * Get notificationContent
   *
   * @return notificationContent
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNotificationContent() {
    return notificationContent;
  }

  @JsonProperty(JSON_PROPERTY_NOTIFICATION_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotificationContent(String notificationContent) {
    this.notificationContent = notificationContent;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetWebhookNotificationLogByIdResponse getWebhookNotificationLogByIdResponse =
        (GetWebhookNotificationLogByIdResponse) o;
    return Objects.equals(
            this.webhookNotificationLog,
            getWebhookNotificationLogByIdResponse.webhookNotificationLog)
        && Objects.equals(
            this.notificationContent, getWebhookNotificationLogByIdResponse.notificationContent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhookNotificationLog, notificationContent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetWebhookNotificationLogByIdResponse {\n");
    sb.append("    webhookNotificationLog: ")
        .append(toIndentedString(webhookNotificationLog))
        .append("\n");
    sb.append("    notificationContent: ")
        .append(toIndentedString(notificationContent))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
