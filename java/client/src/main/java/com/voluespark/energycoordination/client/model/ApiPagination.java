/*
 * Energy Coordination API - Partner Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.voluespark.energycoordination.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Arrays;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

/** ApiPagination */
@JsonPropertyOrder({
  ApiPagination.JSON_PROPERTY_TOTAL_RECORDS,
  ApiPagination.JSON_PROPERTY_PAGE_SIZE,
  ApiPagination.JSON_PROPERTY_CURRENT_PAGE,
  ApiPagination.JSON_PROPERTY_TOTAL_PAGES,
  ApiPagination.JSON_PROPERTY_NEXT_PAGE,
  ApiPagination.JSON_PROPERTY_PREVIOUS_PAGE
})
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.9.0-SNAPSHOT")
public class ApiPagination {
  public static final String JSON_PROPERTY_TOTAL_RECORDS = "totalRecords";
  private Integer totalRecords;

  public static final String JSON_PROPERTY_PAGE_SIZE = "pageSize";
  private Integer pageSize;

  public static final String JSON_PROPERTY_CURRENT_PAGE = "currentPage";
  private Integer currentPage;

  public static final String JSON_PROPERTY_TOTAL_PAGES = "totalPages";
  private Integer totalPages;

  public static final String JSON_PROPERTY_NEXT_PAGE = "nextPage";
  private JsonNullable<Integer> nextPage = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PREVIOUS_PAGE = "previousPage";
  private JsonNullable<Integer> previousPage = JsonNullable.<Integer>undefined();

  public ApiPagination() {}

  /** Constructor with only readonly parameters */
  @JsonCreator
  public ApiPagination(
      @JsonProperty(JSON_PROPERTY_TOTAL_PAGES) Integer totalPages,
      @JsonProperty(JSON_PROPERTY_NEXT_PAGE) Integer nextPage,
      @JsonProperty(JSON_PROPERTY_PREVIOUS_PAGE) Integer previousPage) {
    this();
    this.totalPages = totalPages;
    this.nextPage =
        nextPage == null ? JsonNullable.<Integer>undefined() : JsonNullable.of(nextPage);
    this.previousPage =
        previousPage == null ? JsonNullable.<Integer>undefined() : JsonNullable.of(previousPage);
  }

  public ApiPagination totalRecords(Integer totalRecords) {

    this.totalRecords = totalRecords;
    return this;
  }

  /**
   * Get totalRecords
   *
   * @return totalRecords
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_RECORDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getTotalRecords() {
    return totalRecords;
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_RECORDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalRecords(Integer totalRecords) {
    this.totalRecords = totalRecords;
  }

  public ApiPagination pageSize(Integer pageSize) {

    this.pageSize = pageSize;
    return this;
  }

  /**
   * Get pageSize
   *
   * @return pageSize
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getPageSize() {
    return pageSize;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ApiPagination currentPage(Integer currentPage) {

    this.currentPage = currentPage;
    return this;
  }

  /**
   * Get currentPage
   *
   * @return currentPage
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENT_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getCurrentPage() {
    return currentPage;
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_PAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  /**
   * Get totalPages
   *
   * @return totalPages
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getTotalPages() {
    return totalPages;
  }

  /**
   * Get nextPage
   *
   * @return nextPage
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public Integer getNextPage() {

    if (nextPage == null) {
      nextPage = JsonNullable.<Integer>undefined();
    }
    return nextPage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<Integer> getNextPage_JsonNullable() {
    return nextPage;
  }

  @JsonProperty(JSON_PROPERTY_NEXT_PAGE)
  private void setNextPage_JsonNullable(JsonNullable<Integer> nextPage) {
    this.nextPage = nextPage;
  }

  /**
   * Get previousPage
   *
   * @return previousPage
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public Integer getPreviousPage() {

    if (previousPage == null) {
      previousPage = JsonNullable.<Integer>undefined();
    }
    return previousPage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREVIOUS_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<Integer> getPreviousPage_JsonNullable() {
    return previousPage;
  }

  @JsonProperty(JSON_PROPERTY_PREVIOUS_PAGE)
  private void setPreviousPage_JsonNullable(JsonNullable<Integer> previousPage) {
    this.previousPage = previousPage;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiPagination apiPagination = (ApiPagination) o;
    return Objects.equals(this.totalRecords, apiPagination.totalRecords)
        && Objects.equals(this.pageSize, apiPagination.pageSize)
        && Objects.equals(this.currentPage, apiPagination.currentPage)
        && Objects.equals(this.totalPages, apiPagination.totalPages)
        && equalsNullable(this.nextPage, apiPagination.nextPage)
        && equalsNullable(this.previousPage, apiPagination.previousPage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b
        || (a != null
            && b != null
            && a.isPresent()
            && b.isPresent()
            && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        totalRecords,
        pageSize,
        currentPage,
        totalPages,
        hashCodeNullable(nextPage),
        hashCodeNullable(previousPage));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiPagination {\n");
    sb.append("    totalRecords: ").append(toIndentedString(totalRecords)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    nextPage: ").append(toIndentedString(nextPage)).append("\n");
    sb.append("    previousPage: ").append(toIndentedString(previousPage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
