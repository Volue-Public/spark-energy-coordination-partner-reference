/*
 * Partner webhook API
 *
 * A minimal OpenAPI spec with one POST endpoint to receive notifications from Spark energy-coordination.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Partner.Api.Attributes;
using Partner.Api.Models;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;

namespace Partner.Api.Controllers
{
    /// <summary>
    ///
    /// </summary>
    [ApiController]
    public abstract class NotificationApiController : ControllerBase
    {
        /// <summary>
        /// Receive an event notification
        /// </summary>
        /// <remarks>This endpoint accepts an event notification with a signed payload.</remarks>
        /// <param name="xPayloadSignature"></param>
        /// <param name="eventNotification"></param>
        /// <response code="200">Event notification received successfully</response>
        /// <response code="400">Invalid request</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/notify")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("NotifyPost")]
        public abstract Task<IActionResult> NotifyPost(
            [FromHeader(Name = "x-payload-signature")] [Required()] string xPayloadSignature,
            [FromBody] EventNotification eventNotification
        );
    }
}
